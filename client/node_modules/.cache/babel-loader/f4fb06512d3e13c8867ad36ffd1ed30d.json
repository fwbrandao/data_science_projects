{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_projects/src/components/navBar/index.jsx\";\nimport React, { useState, useContext } from 'react';\nimport clsx from 'clsx';\nimport { ThemeContext } from '../../themes/ThemeProvider';\nimport ProjectsMenu from '../menu/index';\nimport { Avatar, AppBar, Button, Box, Drawer, Divider, Typography, Toolbar, makeStyles, useTheme, Tooltip, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport NightsStayOutlinedIcon from '@material-ui/icons/NightsStayOutlined';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport AvatarImg from '../../images/fwbAvatar.jpg';\nimport AboutMe from '../aboutMe/index';\nconst drawerWidth = 340;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const theme = useTheme(); // Get the setter function from context\n\n  const setThemeName = useContext(ThemeContext);\n  const currentTheme = localStorage.getItem('appTheme');\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  console.log(open);\n  return React.createElement(Box, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    color: \"primary\",\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(ProjectsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/fakeNewsDetector\",\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Data Science Projects\"), !open ? React.createElement(Button, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"end\",\n    onClick: handleDrawerOpen,\n    className: clsx(open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Fernando Brandao\",\n    src: AvatarImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : '', currentTheme === 'darkTheme' ? React.createElement(Tooltip, {\n    title: \"Light Mode\",\n    \"aria-label\": \"Light Mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"lightTheme\",\n    component: \"span\",\n    onClick: () => setThemeName(\"lightTheme\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(WbSunnyOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Dark Mode\",\n    \"aria-label\": \"Dark Mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"darkTheme\",\n    component: \"span\",\n    onClick: () => setThemeName(\"darkTheme\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(NightsStayOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }) : React.createElement(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(AboutMe, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/nando/data_science_projects/src/components/navBar/index.jsx"],"names":["React","useState","useContext","clsx","ThemeContext","ProjectsMenu","Avatar","AppBar","Button","Box","Drawer","Divider","Typography","Toolbar","makeStyles","useTheme","Tooltip","IconButton","ChevronLeftIcon","ChevronRightIcon","NightsStayOutlinedIcon","WbSunnyOutlinedIcon","AvatarImg","AboutMe","drawerWidth","useStyles","theme","root","flexGrow","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","menuButton","title","textBox","avatar","margin","NavBar","classes","setThemeName","currentTheme","localStorage","getItem","open","setOpen","handleDrawerOpen","handleDrawerClose","console","log","link","hide","paper","direction"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport clsx from 'clsx';\nimport { ThemeContext } from '../../themes/ThemeProvider';\nimport ProjectsMenu from '../menu/index';\nimport {\n  Avatar,\n  AppBar,\n  Button,\n  Box,\n  Drawer,\n  Divider,\n  Typography,\n  Toolbar,\n  makeStyles,\n  useTheme,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport NightsStayOutlinedIcon from '@material-ui/icons/NightsStayOutlined';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport AvatarImg from '../../images/fwbAvatar.jpg';\nimport AboutMe from '../aboutMe/index';\n\nconst drawerWidth = 340;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // Get the setter function from context\n  const setThemeName = useContext(ThemeContext);\n  const currentTheme = localStorage.getItem('appTheme');\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  console.log(open);\n  return (\n    <Box className={classes.root}>\n      <AppBar\n        color=\"primary\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <ProjectsMenu />\n          <Link to=\"/fakeNewsDetector\" className={classes.link} ></Link>\n          <Typography variant=\"h6\" className={classes.title}>\n            Data Science Projects\n          </Typography>\n          {!open ? (\n            <Button\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"end\"\n              onClick={handleDrawerOpen}\n              className={clsx(open && classes.hide)}\n              >\n              <Avatar alt=\"Fernando Brandao\" src={AvatarImg} />\n            </Button>\n          ) : ''}\n          {currentTheme === 'darkTheme' ? (\n            <Tooltip title=\"Light Mode\" aria-label=\"Light Mode\">\n              <IconButton aria-label=\"lightTheme\" component=\"span\" onClick={() => setThemeName(\"lightTheme\")}>\n                <WbSunnyOutlinedIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Dark Mode\" aria-label=\"Dark Mode\">\n              <IconButton aria-label=\"darkTheme\" component=\"span\" onClick={() => setThemeName(\"darkTheme\")}>\n                <NightsStayOutlinedIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <AboutMe />\n      </Drawer>\n    </Box>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}