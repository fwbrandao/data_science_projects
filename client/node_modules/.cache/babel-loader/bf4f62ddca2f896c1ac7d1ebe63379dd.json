{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_projects/src/core/topicDialog/index.jsx\";\nimport React from 'react';\nimport { Dialog, AppBar, Toolbar, IconButton, List, ListItem, ListItemText, Divider, Slide, Button, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  titles: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }));\n});\n\nconst TopicDialog = ({\n  open,\n  closeDialog,\n  topicItem\n}) => {\n  const classes = useStyles();\n  console.log('');\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: closeDialog,\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: closeDialog,\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, topicItem === 'CNN' ? topicItem.title : ''), /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    color: \"inherit\",\n    onClick: closeDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"save\"))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: \"Titania\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default TopicDialog;","map":{"version":3,"sources":["/Users/nando/data_science_projects/src/core/topicDialog/index.jsx"],"names":["React","Dialog","AppBar","Toolbar","IconButton","List","ListItem","ListItemText","Divider","Slide","Button","Typography","makeStyles","CloseIcon","useStyles","theme","appBar","position","titles","marginLeft","spacing","flex","Transition","forwardRef","props","ref","TopicDialog","open","closeDialog","topicItem","classes","console","log","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Dialog,\n    AppBar,\n    Toolbar,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Divider,\n    Slide,\n    Button,\n    Typography,\n    makeStyles,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative',\n      },\n      titles: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n      },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nconst TopicDialog = ({ open, closeDialog, topicItem }) => {\n    const classes = useStyles();\n\n    console.log('')\n\n    return (\n        <Dialog fullScreen open={open} onClose={closeDialog} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={closeDialog} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.titles}>\n                    {topicItem === 'CNN' ? topicItem.title : ''}\n\n                    </Typography>\n                    <Button autoFocus color=\"inherit\" onClick={closeDialog}>\n                    save\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <List>\n                <ListItem button>\n                    <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n                </ListItem>\n                <Divider />\n                <ListItem button>\n                    <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}\n\nexport default TopicDialog;\n"]},"metadata":{},"sourceType":"module"}