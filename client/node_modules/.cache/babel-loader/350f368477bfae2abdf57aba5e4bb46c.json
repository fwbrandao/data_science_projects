{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_projects/src/core/topicDialog/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Dialog, AppBar, Toolbar, Grid, IconButton, List, ListItem, ListItemText, Divider, Slide, Button, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ProjectCard from '../projectCard';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  titles: {\n    flex: 1\n  },\n  projectCard: {\n    display: 'flex',\n    flexGrow: 1\n  },\n  gridItem: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  intro: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst projectsCardCNN = [{\n  projectTitle: 'ConvNet & TensorFlow application',\n  projectIntro: 'Built and trained a ConvNet in TensorFlow for a classification problem',\n  Skills: ['Python', 'TensorFlow']\n}, {\n  projectTitle: 'Keras introduction',\n  projectIntro: 'Emotion Detection in Images of Faces',\n  Skills: ['Keras', 'Python', 'TensorFlow']\n}, {\n  projectTitle: 'Residual Networks (ResNets)',\n  projectIntro: 'Use ResNets to build very deep '\n}, {\n  projectTitle: 'ConvNet & TensorFlow application',\n  projectIntro: 'In this project Ive built and trained a ConvNet in TensorFlow for a classification problem'\n}];\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }));\n});\n\nconst TopicDialog = ({\n  open,\n  closeDialog,\n  topicData\n}) => {\n  const classes = useStyles();\n  const [projectCard, setProjectCard] = useState([]);\n  useEffect(() => {\n    if (topicData.id === 'CNN') {\n      setProjectCard(projectsCardCNN);\n    }\n  }, [projectCard, topicData.id]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: closeDialog,\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, topicData.topicTitle), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: closeDialog,\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.intro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, topicData.topicIntro)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.projectCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, projectCard.map(item => /*#__PURE__*/React.createElement(Grid, {\n    className: classes.gridItem,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default TopicDialog;","map":{"version":3,"sources":["/Users/nando/data_science_projects/src/core/topicDialog/index.jsx"],"names":["React","useState","useEffect","Box","Dialog","AppBar","Toolbar","Grid","IconButton","List","ListItem","ListItemText","Divider","Slide","Button","Typography","makeStyles","CloseIcon","ProjectCard","useStyles","theme","appBar","position","titles","flex","projectCard","display","flexGrow","gridItem","justifyContent","intro","marginLeft","spacing","projectsCardCNN","projectTitle","projectIntro","Skills","Transition","forwardRef","props","ref","TopicDialog","open","closeDialog","topicData","classes","setProjectCard","id","topicTitle","topicIntro","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Dialog,\n    AppBar,\n    Toolbar,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Divider,\n    Slide,\n    Button,\n    Typography,\n    makeStyles,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ProjectCard from '../projectCard';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative',\n      },\n      titles: {\n        flex: 1,\n      },\n      projectCard: {\n          display: 'flex',\n          flexGrow: 1\n      },\n      gridItem: {\n        display: 'flex',\n        justifyContent: 'center',\n      },\n      intro: {\n        marginLeft: theme.spacing(1)\n      }\n}));\n\nconst projectsCardCNN = [\n    {\n      projectTitle: 'ConvNet & TensorFlow application',\n      projectIntro: 'Built and trained a ConvNet in TensorFlow for a classification problem',\n      Skills: ['Python', 'TensorFlow']\n    },\n    {\n      projectTitle: 'Keras introduction',\n      projectIntro: 'Emotion Detection in Images of Faces',\n      Skills: ['Keras', 'Python', 'TensorFlow']\n    },\n    {\n      projectTitle: 'Residual Networks (ResNets)',\n      projectIntro: 'Use ResNets to build very deep ',\n    },\n    {\n      projectTitle: 'ConvNet & TensorFlow application',\n      projectIntro: 'In this project Ive built and trained a ConvNet in TensorFlow for a classification problem',\n    }\n  ]\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nconst TopicDialog = ({ open, closeDialog, topicData }) => {\n    const classes = useStyles();\n    const [projectCard, setProjectCard] = useState([]);\n\n    useEffect(() => {\n        if (topicData.id === 'CNN') {\n            setProjectCard(projectsCardCNN)\n        }\n    },[projectCard, topicData.id]);\n\n    return (\n        <Dialog fullScreen open={open} onClose={closeDialog} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.titles}>\n                        {topicData.topicTitle}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={closeDialog} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Box mb={2}>\n                <ListItem button p={3}>\n                    <ListItemText className={classes.intro}>\n                        {topicData.topicIntro}\n                    </ListItemText>\n                </ListItem>\n                <Divider />\n            </Box>\n            <Box className={classes.projectCard} >\n                <Grid container spacing={2}>\n                    {projectCard.map(item => (\n                        <Grid className={classes.gridItem} item xs={6}>\n                            <ProjectCard data={item}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default TopicDialog;\n"]},"metadata":{},"sourceType":"module"}