{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_projects/src/components/navBar/index.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { ThemeContext } from './themes/ThemeProvider';\nimport { AppBar, Button, Box, Avatar, Typography, Toolbar, Switch, makeStyles, Tooltip, Link, IconButton } from '@material-ui/core';\nimport ProjectsMenu from '../menu/index';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport AvatarImg from '../../images/fwbAvatar.jpg';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst NavBar = ({\n  themeName\n}) => {\n  const classes = useStyles(); // Get the setter function from context\n\n  const setThemeName = useContext(ThemeContext);\n  const [open, setOpen] = useState(false);\n  const [darkState, setDarkState] = useState(false); // const palletType = darkState ? \"dark\" : \"light\";\n  // const mainPrimaryColor = darkState ? '#c2c2c2' : '#f5f5f5';\n  // const mainSecondaryColor = darkState ? '#9ea7aa' : '#cfd8dc';\n  // const darkTheme = createMuiTheme({\n  //   palette: {\n  //     type: palletType,\n  //     primary: {\n  //       main: mainPrimaryColor\n  //     },\n  //     secondary: {\n  //       main: mainSecondaryColor\n  //     }\n  //   }\n  // });\n\n  const handleThemeChange = () => {\n    darkState ? themeName('lightTheme') : themeName('darkTheme');\n    setDarkState(!darkState);\n  };\n\n  const handleAvatarClick = () => {\n    setOpen(open => !open);\n  };\n\n  console.log(open);\n  return (// <ThemeProvider theme={darkTheme}>\n    React.createElement(Box, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(ProjectsMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Data Science Projects\"), React.createElement(Button, {\n      className: classes.avatar,\n      onClick: handleAvatarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Fernando Brandao\",\n      src: AvatarImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      title: \"Navigate to my github\",\n      \"aria-label\": \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"https://github.com/fwbrandao\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(GitHubIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))), React.createElement(Tooltip, {\n      title: \"Navigate to my LinkedIn\",\n      \"aria-label\": \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"https://www.linkedin.com/in/fernando-b-170060151/\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"LinkedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(LinkedInIcon, {\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setThemeName(\"lightTheme\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Set Light Theme\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => themeName(\"darkTheme\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Set Dark Theme\")))) // </ThemeProvider>\n\n  );\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/nando/data_science_projects/src/components/navBar/index.jsx"],"names":["React","useState","useContext","ThemeContext","AppBar","Button","Box","Avatar","Typography","Toolbar","Switch","makeStyles","Tooltip","Link","IconButton","ProjectsMenu","GitHubIcon","LinkedInIcon","AvatarImg","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textBox","display","alignItems","avatar","margin","NavBar","themeName","classes","setThemeName","open","setOpen","darkState","setDarkState","handleThemeChange","handleAvatarClick","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { ThemeContext } from './themes/ThemeProvider';\n\nimport {\n  AppBar,\n  Button,\n  Box,\n  Avatar,\n  Typography,\n  Toolbar,\n  Switch,\n  makeStyles,\n  Tooltip,\n  Link,\n  IconButton,\n} from '@material-ui/core';\nimport ProjectsMenu from '../menu/index';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport AvatarImg from '../../images/fwbAvatar.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst NavBar = ({ themeName }) => {\n  const classes = useStyles();\n\n  // Get the setter function from context\n  const setThemeName = useContext(ThemeContext);\n\n  const [open, setOpen] = useState(false);\n  const [darkState, setDarkState] = useState(false);\n  // const palletType = darkState ? \"dark\" : \"light\";\n  // const mainPrimaryColor = darkState ? '#c2c2c2' : '#f5f5f5';\n  // const mainSecondaryColor = darkState ? '#9ea7aa' : '#cfd8dc';\n  // const darkTheme = createMuiTheme({\n  //   palette: {\n  //     type: palletType,\n  //     primary: {\n  //       main: mainPrimaryColor\n  //     },\n  //     secondary: {\n  //       main: mainSecondaryColor\n  //     }\n  //   }\n  // });\n  const handleThemeChange = () => {\n    darkState ? themeName('lightTheme') : themeName('darkTheme')\n    setDarkState(!darkState)\n  };\n\n  const handleAvatarClick = () => {\n    setOpen(open => !open);\n  }\n\n  console.log(open);\n  return (\n    // <ThemeProvider theme={darkTheme}>\n      <Box className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <ProjectsMenu />\n            <Typography variant=\"h6\" className={classes.title}>\n              Data Science Projects\n            </Typography>\n            <Button className={classes.avatar} onClick={handleAvatarClick}>\n              <Avatar alt=\"Fernando Brandao\" src={AvatarImg} />\n            </Button>\n            <Tooltip title=\"Navigate to my github\" aria-label=\"code\">\n              <Link href=\"https://github.com/fwbrandao\" target=\"_blank\">\n                <IconButton aria-label=\"github\" >\n                  <GitHubIcon />\n                </IconButton>\n              </Link>\n            </Tooltip>\n            <Tooltip title=\"Navigate to my LinkedIn\" aria-label=\"code\">\n              <Link href=\"https://www.linkedin.com/in/fernando-b-170060151/\" target=\"_blank\">\n                <IconButton aria-label=\"LinkedIn\" >\n                  <LinkedInIcon color=\"action\"/>\n                </IconButton>\n              </Link>\n            </Tooltip>\n            {/* <Switch checked={darkState} onChange={handleThemeChange} /> */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setThemeName(\"lightTheme\")}\n            >\n              Set Light Theme\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => themeName(\"darkTheme\")}\n            >\n              Set Dark Theme\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    // </ThemeProvider>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}