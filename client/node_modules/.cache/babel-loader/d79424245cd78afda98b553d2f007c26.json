{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_projects/src/components/howIDidIt/index.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '80%',\n    margin: '10px auto',\n    display: \"flex\"\n  },\n  title: {\n    fontSize: 18,\n    display: \"flex\"\n  },\n  description: {\n    fontSize: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: '15px'\n  }\n});\n\nconst HowIDidIt = ({\n  title,\n  description,\n  code,\n  code2,\n  code3,\n  code4,\n  code5,\n  code6,\n  code7,\n  link\n}) => {\n  const classes = useStyles();\n  return React.createElement(Card, {\n    className: classes.root,\n    elevation: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title,\n    color: \"inherit\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    className: classes.description,\n    variant: \"body2\",\n    color: \"inherit\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, description), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, code), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, code2), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, code3), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, code4), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, code5), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, code6), React.createElement(Typography, {\n    color: \"primary\",\n    display: \"block\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, code7), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, link)));\n};\n\nexport default HowIDidIt;","map":{"version":3,"sources":["/Users/nando/data_science_projects/src/components/howIDidIt/index.jsx"],"names":["React","makeStyles","Card","CardContent","Typography","useStyles","root","maxWidth","margin","display","title","fontSize","description","justifyContent","marginBottom","HowIDidIt","code","code2","code3","code4","code5","code6","code7","link","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  Typography\n}\n  from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '80%',\n    margin: '10px auto',\n    display: \"flex\"\n  },\n  title: {\n    fontSize: 18,\n    display: \"flex\",\n  },\n  description: {\n    fontSize: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: '15px'\n  },\n});\n\nconst HowIDidIt = ({ title, description, code, code2, code3, code4, code5, code6, code7, link }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} elevation={5}>\n      <CardContent>\n        <Typography\n          variant=\"h2\"\n          className={classes.title}\n          color=\"inherit\"\n          gutterBottom>\n          {title}\n        </Typography>\n        <Typography\n          className={classes.description}\n          variant=\"body2\"\n          color=\"inherit\"\n          component=\"p\"\n        >\n          {description}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code2}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code3}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code4}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code5}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code6}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          display=\"block\"\n          gutterBottom\n        >\n          {code7}\n        </Typography>\n        <Typography>{link}</Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default HowIDidIt;\n"]},"metadata":{},"sourceType":"module"}